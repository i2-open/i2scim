#
# Copyright 2021.  Independent Identity Incorporated
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#*****************************************************
# Configuration for Deploying i2scim with in Memory DB
#*****************************************************
quarkus.application.name=i2scim
quarkus.kubernetes.namespace=scim-mem
#quarkus.container-image.group=independentid
#quarkus.container-image.name=i2scim-mem
quarkus.container-image.builder=docker
quarkus.container-image.tag=0.7.0-SNAPSHOT
#quarkus.container-image.image=independentid/i2scim-mem:0.5.0-Alpha
#quarkus.container-image.registry=docker.io
quarkus.docker.build-args.platform=linux/amd64,linux/arm64
#quarkus.docker.build-args.--load=\
# Disabled because there appears to be a bug building multi-arch docker builds - do by hand
quarkus.container-image.build=false
quarkus.container-image.push=false
# Use the cluster's assigned loadbalancer
quarkus.kubernetes.service-type=LoadBalancer
quarkus.kubernetes.deploy=false
quarkus.kubernetes.image-pull-secrets=regcred
quarkus.kubernetes.replicas=1
quarkus.kubernetes.liveness-probe.initial-delay=30
quarkus.kubernetes.readiness-probe.initial-delay=5
quarkus.kubernetes.liveness-probe.period=30
quarkus.kubernetes.readiness-probe.period=30
quarkus.kubernetes.liveness-probe.timeout=10
quarkus.kubernetes.readiness-probe.timeout=10
#quarkus.kubernetes.liveness-probe.timeout
#quarkus.kubernetes.liveness-probe.success-threshold
#quarkus.kubernetes.liveness-probe.failure-threshold
# At this time, the memory provider by itself has no replication capabilities
# Server root credential
quarkus.kubernetes.env.secrets=i2scim-root
# Server configuration
quarkus.kubernetes.env.configmaps=i2scim-mem-config
# Define the SCIM mount point (where data will be stored)
quarkus.kubernetes.mounts.i2scim-pvc.path=/scim
quarkus.kubernetes.mounts.i2scim-pvc.read-only=false
#quarkus.kubernetes.mounts."i2scim-pvc".sub-path=""
quarkus.kubernetes.pvc-volumes.i2scim-pvc.claim-name=i2scim-pvc
quarkus.kubernetes.pvc-volumes.i2scim-pvc.default-mode=ReadWriteOnce
# Define the Schema config endpoint
quarkus.kubernetes.config-map-volumes.configschema.config-map-name=i2scim-config-schema
quarkus.kubernetes.config-map-volumes.configschema.default-mode=0444
quarkus.kubernetes.mounts.configschema.name=i2scim-config-schema
quarkus.kubernetes.mounts.configschema.path=/config
quarkus.kubernetes.mounts.configschema.read-only=true
# Bootstrap Schema definitions
scim.resourcetype.path=/config/resourceTypes.json
scim.schema.path=/config/scimSchema.json
#SCIM features
scim.json.pretty=true
scim.query.max.resultsize=1000
scim.bulk.max.ops=1000
scim.bulk.max.errors=5
scim.thread.count=5
scim.root.dir=/scim
#Console log
quarkus.log.min-level=FINE
#quarkus.log.category."com.independentid.scim".min-level=DEBUG
# HTTP Logging
quarkus.http.access-log.enabled=true
quarkus.http.access-log.log-to-file=true
quarkus.http.access-log.base-file-name=scim-access
quarkus.http.access-log.log-directory=${scim.root.dir}/logs
#SCIM Access Control
scim.security.enable=true
scim.security.acis=/config/acis.json
scim.security.root.enable=true
#scim.security.root.username=
#scim.security.root.password=
#DEVOPS and Monitoring
#quarkus.smallrye-metrics.extensions.enabled=true
quarkus.smallrye-metrics.path=/metrics
quarkus.smallrye-metrics.jaxrs.enabled=true
# SCIM Event Handling and Replication (must be enabled to run kafka components)
scim.event.enable=false
# Meomory provider config can be found in the configmap.
